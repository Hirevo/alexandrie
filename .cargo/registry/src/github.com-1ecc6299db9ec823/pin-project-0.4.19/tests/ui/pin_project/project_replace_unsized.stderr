error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:3:15
  |
3 | #[pin_project(Replace)] //~ ERROR E0277
  |               ^^^^^^^ doesn't have a size known at compile-time
4 | struct Struct<T: ?Sized> {
  |               - this type parameter needs to be `std::marker::Sized`
  |
  = help: within `Struct<T>`, the trait `std::marker::Sized` is not implemented for `T`
  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
  = note: required because it appears within the type `Struct<T>`
  = note: all local variables must have a statically known size
  = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> $DIR/project_replace_unsized.rs:5:5
    |
4   | struct Struct<T: ?Sized> {
    |               - this type parameter needs to be `std::marker::Sized`
5   |     x: T,
    |     ^ doesn't have a size known at compile-time
    |
    = help: the trait `std::marker::Sized` is not implemented for `T`
    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:3:1
  |
3 | #[pin_project(Replace)] //~ ERROR E0277
  | ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
4 | struct Struct<T: ?Sized> {
  |               - this type parameter needs to be `std::marker::Sized`
  |
  = help: within `__StructProjectionOwned<T>`, the trait `std::marker::Sized` is not implemented for `T`
  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
  = note: required because it appears within the type `__StructProjectionOwned<T>`
  = note: structs must have a statically known size to be initialized
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:8:15
  |
8 | #[pin_project(Replace)] //~ ERROR E0277
  |               ^^^^^^^ doesn't have a size known at compile-time
9 | struct TupleStruct<T: ?Sized>(T);
  |                    - this type parameter needs to be `std::marker::Sized`
  |
  = help: within `TupleStruct<T>`, the trait `std::marker::Sized` is not implemented for `T`
  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
  = note: required because it appears within the type `TupleStruct<T>`
  = note: all local variables must have a statically known size
  = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> $DIR/project_replace_unsized.rs:8:1
    |
8   | #[pin_project(Replace)] //~ ERROR E0277
    | ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
9   | struct TupleStruct<T: ?Sized>(T);
    |                    - this type parameter needs to be `std::marker::Sized`
    |
    = help: the trait `std::marker::Sized` is not implemented for `T`
    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:9:8
  |
9 | struct TupleStruct<T: ?Sized>(T);
  |        ^^^^^^^^^^^ - this type parameter needs to be `std::marker::Sized`
  |        |
  |        doesn't have a size known at compile-time
  |
  = help: the trait `std::marker::Sized` is not implemented for `T`
  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
  = note: all function arguments must have a statically known size
  = help: unsized locals are gated as an unstable feature
