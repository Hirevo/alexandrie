[package]
name = "alexandrie"
version = "0.1.0"
edition = "2018"
rust-version = "1.68.0"
authors = ["Nicolas Polomack <nicolas@polomack.eu>"]
description = "An alternative crate registry, implemented in Rust."
repository = "https://github.com/Hirevo/alexandrie"
documentation = "https://crates.polomack.eu/docs/alexandrie"
keywords = ["crates", "cargo", "web", "registry"]
categories = ["development-tools"]
license = "MIT OR Apache-2.0"
build = "build.rs"

[badges]
codecov = { repository = "Hirevo/alexandrie"}

[dependencies]
# internal
alexandrie-index = { path = "../alexandrie-index", version = "0.1.0" }
alexandrie-storage = { path = "../alexandrie-storage", version = "0.1.0" }
alexandrie-rendering = { path = "../alexandrie-rendering", version = "0.1.0" }

# core
tide = { version = "0.16.0", default-features = false, features = ["h1-server", "sessions"] }
clap = "2.33.3"

# session handling
async-session = "2.0.1"

# data types
url = "2.2.2"
semver = { version = "0.11.0", features = ["serde"] }
chrono = { version = "0.4.19", features = ["serde"] }

# file formats
serde = { version = "1.0.125", features = ["derive"] }
json = { package = "serde_json", version = "1.0.64" }
toml = "0.5.8"

# binary parsing
byteorder = "1.4.3"

# (en|de)coding / hashing
ring = "0.16.20"
hex = "0.4.3"
percent-encoding = "2.1.0"

# database
diesel = { version = "1.4.6", features = ["r2d2", "chrono"] }
diesel_migrations = "1.4.0"

# async primitives
async-std = { version = "1.9.0", features = ["attributes", "tokio1"] }

# error handling
thiserror = "1.0.24"

# README rendering
flate2 = "1.0.20"
tar = "0.4.33"

# build-tme debug information
shadow-rs = "0.5.25"

# frontend
handlebars = { version = "3.5.5", features = ["dir_source"], optional = true }
time = { version = "0.2.26", optional = true }
num-format = { version = "0.4.0", optional = true }
bigdecimal = { version = "0.1.2", features = ["serde"], optional = true }
oauth2 = { version = "4.1.0", optional = true }
reqwest = { version = "0.11.5", optional = true, features = ["json"] }
once_cell = { version = "1.8.0", optional = true }
regex = { version = "1.5.5", optional = true }

# logs
log = "0.4.14"
slog = "2.7.0"
slog-stdlog = "4.1.0"
slog-scope = "4.4.0"
slog-term = "2.8.0"
slog-async = "2.6.0"

[features]
default = ["frontend", "sqlite"]
# default = ["frontend", "mysql"]
# default = ["frontend", "postgres"]
mysql = ["diesel/mysql", "diesel_migrations/mysql"]
sqlite = ["diesel/sqlite", "diesel_migrations/sqlite"]
postgres = ["diesel/postgres", "diesel_migrations/postgres"]
git2 = ["alexandrie-index/git2"]
s3 = ["alexandrie-storage/s3"]
frontend = [
    "handlebars",
    "oauth2",
    "once_cell",
    "regex",
    "reqwest",
    "num-format",
    "bigdecimal",
    "time",
    "diesel/numeric",
]

[build-dependencies]
shadow-rs = "0.5.25"

[package.metadata.rpm]
package = "alexandrie"

[package.metadata.rpm.cargo]
buildflags = ["--release"]

[package.metadata.rpm.targets]
alexandrie = { path = "/usr/bin/alexandrie" }

[package.metadata.rpm.files]
"alexandrie.service" = { path = "/usr/lib/systemd/system/alexandrie.service" }
"alexandrie.toml" = { path = "/etc/alexandrie.conf" }
"crate-index-config.json" = { path = "/var/db/alexandrie/crate-index/config.json" }
"../../../assets/" = { path = "/usr/share/alexandrie/assets/" }
"../../../templates/" = { path = "/usr/share/alexandrie/templates/" }
"../../../syntect/dumps/" = { path = "/usr/share/alexandrie/syntect/dumps/" }
